buildscript {
    ext {
        grailsVersion = project.grailsVersion
    }
    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
        maven { url  "http://idcapture.bintray.com/plugins" }
        mavenCentral()
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath "com.bertramlabs.plugins:asset-pipeline-gradle:3.0.10"
        classpath "org.grails.plugins:hibernate5:${gormVersion}"
        classpath "org.grails.plugins:quartz:2.0.13"
        classpath "org.grails.plugins:database-migration:3.1.0"
    }
}

version "1.3-SNAPSHOT"
group "tmf.assessment"

apply plugin:"idea"
apply plugin:"war"
apply plugin:"org.grails.grails-web"
apply plugin:"org.grails.grails-gsp"
apply plugin:"asset-pipeline"

ext {
    grailsVersion = project.grailsVersion
    gradleWrapperVersion = project.gradleWrapperVersion
}

repositories {
    mavenLocal()
    maven { url "https://repo.grails.org/grails/core" }
    mavenCentral()
    maven { url  "http://idcapture.bintray.com/plugins" }
}

dependencyManagement {
    imports {
        mavenBom "org.grails:grails-bom:$grailsVersion"
    }
    applyMavenExclusions false
}

// This creates the folder 'migrations' where all database schema changes are stored
sourceSets {
    main {
        resources {
            srcDir "grails-app/migrations"
        }
    }
}

dependencies {
    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    provided "org.springframework.boot:spring-boot-starter-tomcat"

    compile "org.grails:grails-core"
    compile "org.grails:grails-dependencies"
    compile "org.grails:grails-web-boot"
    compile "org.grails:grails-logging"
    console "org.grails:grails-console"

    compile "org.grails.plugins:cache"
    compile "org.grails.plugins:gsp:4.0.0"
    compile "org.grails.plugins:scaffolding"
    compile "org.grails.plugins:hibernate5:${gormVersion}"
    compile 'org.grails.plugins:spring-security-core:4.0.0.RC3'

    compile "shared.views:tmf-shared-views:0.1"

    compile 'org.grails.plugins:quartz:2.0.13' // For monitoring configuration directories periodically
    compile 'org.quartz-scheduler:quartz:2.2.1'

    compile "org.hibernate:hibernate-core:5.4.10.Final"
    compile "org.hibernate:hibernate-ehcache:5.4.10.Final"

    compile 'commons-codec:commons-codec:1.10'

    // For working with excel spreadsheets
    compile 'org.apache.poi:poi:3.16'
    compile 'org.apache.poi:poi-ooxml:3.16'

    // These two are for processing income trustmark definition XML
    compile 'dom4j:dom4j:1.6.1'

    // For parsing magic bit and getting content types.
    compile 'net.sf.jmimemagic:jmimemagic:0.1.5'

    compile 'com.googlecode.charts4j:charts4j:1.3'

    compile 'commons-io:commons-io:2.7'

    compile 'log4j:log4j:1.2.17'
    compile 'org.freemarker:freemarker:2.3.31'

    compile 'org.grails.plugins:database-migration:3.1.0'
    compile 'org.liquibase:liquibase-core:3.10.3'

    compile "edu.gatech.gtri.trustmark:tf-api:1.4.19"
    compile "edu.gatech.gtri.trustmark:tf-api-impl:1.4.28"

    profile "org.grails.profiles:web"

    runtime 'mysql:mysql-connector-java:8.0.24'

    runtimeOnly 'jaxen:jaxen:1.1.6'
    runtimeOnly "com.bertramlabs.plugins:asset-pipeline-grails:3.0.10"

    testCompile "org.grails.plugins:geb"
    testCompile "org.grails:grails-web-testing-support:2.1.1"
    testCompile "org.grails:grails-gorm-testing-support:2.1.1"

    testRuntime "org.seleniumhq.selenium:selenium-htmlunit-driver:2.47.1"
    testRuntime "net.sourceforge.htmlunit:htmlunit:2.18"
}

assets {
    minifyJs = true
    minifyCss = true
}

bootRun {
    jvmArgs('-Dspring.output.ansi.enabled=always')
    sourceResources sourceSets.main
    configure {
        systemProperties = System.properties
    }
}

// copied from: http://nimavat.me/blog/grails3-add-custom-build-info-to-war
buildProperties {
    inputs.property("info.app.buildDate", new Date().format('yyyy-MM-dd HH:mm:ss'))
}
