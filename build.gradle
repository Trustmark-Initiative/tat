buildscript {
    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsGradlePluginVersion"
        classpath "org.grails.plugins:hibernate5:7.2.1"
        classpath "gradle.plugin.com.github.erdi.webdriver-binaries:webdriver-binaries-gradle-plugin:2.6"
        classpath "com.bertramlabs.plugins:asset-pipeline-gradle:3.3.4"
        classpath "org.grails.plugins:quartz:2.0.13"
        classpath "org.grails.plugins:database-migration:4.0.0"
    }
}

version "1.4"
group "tmf.assessment"

apply plugin:"idea"
apply plugin:"war"
apply plugin:"org.grails.grails-web"
apply plugin:"org.grails.grails-gsp"
apply plugin:"com.github.erdi.webdriver-binaries"
apply plugin:"com.bertramlabs.asset-pipeline"

repositories {
    mavenLocal()
    maven { url "https://repo.grails.org/grails/core" }
}

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
}

// This creates the folder 'migrations' where all database schema changes are stored
sourceSets {
    main {
        resources {
            srcDir "grails-app/migrations"
        }
    }
}

dependencies {
    developmentOnly("org.springframework.boot:spring-boot-devtools")

    console "org.grails:grails-console"

    implementation "org.springframework.boot:spring-boot-starter-logging"
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation "org.springframework.boot:spring-boot-autoconfigure"

    implementation "org.grails:grails-core"

    implementation "org.springframework.boot:spring-boot-starter-actuator"
    testImplementation "org.springframework.boot:spring-boot-starter-tomcat"
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    implementation "org.grails:grails-web-boot"
    implementation "org.grails:grails-logging"

    implementation "org.grails:grails-plugin-rest"
    implementation "org.grails:grails-plugin-databinding"
    implementation "org.grails:grails-plugin-i18n"
    implementation "org.grails:grails-plugin-services"
    implementation "org.grails:grails-plugin-url-mappings"
    implementation "org.grails:grails-plugin-interceptors"

    implementation "org.grails.plugins:cache"

    implementation "org.grails.plugins:gsp"
    implementation "org.grails.plugins:scaffolding"

    profile "org.grails.profiles:web"

    implementation "org.grails.plugins:hibernate5"
    implementation "org.hibernate:hibernate-core:5.6.3.Final"
    implementation "org.grails.plugins:events"

    implementation 'org.grails.plugins:spring-security-core:4.0.3'

    implementation "shared.views:tmf-shared-views:0.3"

    implementation 'org.grails.plugins:quartz:2.0.13' // For monitoring configuration directories periodically
    implementation 'org.quartz-scheduler:quartz:2.2.1' // required for quartz scheduler

    implementation "org.hibernate:hibernate-ehcache:5.6.5.Final"

    implementation 'commons-codec:commons-codec:1.10'

    // For working with excel spreadsheets
    implementation 'org.apache.poi:poi:3.16'
    implementation 'org.apache.poi:poi-ooxml:3.16'

    // These two are for processing income trustmark definition XML
    implementation 'dom4j:dom4j:1.6.1'

    implementation 'com.googlecode.charts4j:charts4j:1.3'

    implementation 'commons-io:commons-io:2.7'

    implementation 'org.freemarker:freemarker:2.3.31'

    runtimeOnly ('org.grails.plugins:database-migration:4.1.0') {
        // It seems that this module conflicts with the Tomcat boot process
        exclude group: 'org.springframework.boot', module: 'spring-boot-cli'
        exclude group: 'com.vaadin.external.google', module:'android-json'
    }

    implementation 'org.liquibase:liquibase-core:4.9.1'
    implementation 'com.github.blagerweij:liquibase-sessionlock:1.5.1'

    implementation "edu.gatech.gtri.trustmark:tf-api:1.4.37"
    implementation "edu.gatech.gtri.trustmark:tf-api-impl:1.4.58"

    compileOnly "io.micronaut:micronaut-inject-groovy"

    implementation 'mysql:mysql-connector-java:8.0.28'

    implementation 'jaxen:jaxen:1.2.0'

    runtimeOnly "org.glassfish.web:el-impl:2.2.1-b05"
    runtimeOnly "com.h2database:h2"
    runtimeOnly "org.apache.tomcat:tomcat-jdbc"
    runtimeOnly "javax.xml.bind:jaxb-api:2.3.1"

    runtimeOnly "com.bertramlabs.plugins:asset-pipeline-grails:3.3.4"

    testImplementation "org.grails.plugins:geb"
    testImplementation "org.grails:grails-web-testing-support"
    testImplementation "org.grails:grails-gorm-testing-support"

    implementation "org.seleniumhq.selenium:selenium-htmlunit-driver:2.52.0"
    implementation 'net.sourceforge.htmlunit:htmlunit:2.58.0'

    implementation 'org.springframework.ldap:spring-ldap-core:2.3.0.RELEASE'
}

bootRun {
    ignoreExitValue true
    jvmArgs(
            '-Dspring.output.ansi.enabled=always',
            '-noverify',
            '-XX:TieredStopAtLevel=1',
            '-Xmx1024m')
    sourceResources sourceSets.main
    String springProfilesActive = 'spring.profiles.active'
    systemProperty springProfilesActive, System.getProperty(springProfilesActive)
}

tasks.withType(GroovyCompile) {
    configure(groovyOptions) {
        forkOptions.jvmArgs = ['-Xmx1024m']
    }
}

tasks.withType(Test) {
    useJUnitPlatform()
}

webdriverBinaries {
    chromedriver '2.45.0'
    geckodriver '0.30.0'
}

tasks.withType(Test) {
    systemProperty "geb.env", System.getProperty('geb.env')
    systemProperty "geb.build.reportsDir", reporting.file("geb/integrationTest")
    systemProperty "webdriver.chrome.driver", System.getProperty('webdriver.chrome.driver')
    systemProperty "webdriver.gecko.driver", System.getProperty('webdriver.gecko.driver')
}

assets {
    minifyJs = true
    minifyCss = true
}

// copied from: http://nimavat.me/blog/grails3-add-custom-build-info-to-war
buildProperties {
    inputs.property("info.app.buildDate", new Date().format('yyyy-MM-dd HH:mm:ss'))
}
